{"version":3,"file":"static/js/771.923d2e58.chunk.js","mappings":"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","sources":["pages/Shop.jsx","pages/pages.styled.js","services/products-api.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { getRestaurants } from \"services/products-api\";\r\nimport { RestItem, List, StyledLink, Text } from \"./pages.styled\";\r\nimport { RotatingLines } from \"react-loader-spinner\";\r\n\r\nexport default function Shop({ getList }) {\r\n  const [restaurants, setRestaurants] = useState([]);\r\n  const [status, setStatus] = useState(\"idle\");\r\n\r\n  useEffect(() => {\r\n    setStatus(\"pending\");\r\n\r\n    getRestaurants()\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n\r\n        return Promise.reject(\"Error\");\r\n      })\r\n      .then((restaurants) => {\r\n        if (restaurants.length === 0) {\r\n          setStatus(\"rejected\");\r\n          return;\r\n        }\r\n        setRestaurants(restaurants);\r\n        setStatus(\"resolved\");\r\n        getList(restaurants);\r\n      })\r\n      .catch((error) => {\r\n        setStatus(\"rejected\");\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {status === \"pending\" && (\r\n        <RotatingLines\r\n          strokeColor=\"#581845\"\r\n          strokeWidth=\"5\"\r\n          animationDuration=\"0.75\"\r\n          width=\"150\"\r\n          visible={true}\r\n        />\r\n      )}\r\n      {status === \"rejected\" && (\r\n        <h1>Something went wrong. Please, try again</h1>\r\n      )}\r\n      {status === \"resolved\" && (\r\n        <>\r\n          <Text>Welcome to Delivery App. Choose your favorite restaurant.</Text>\r\n\r\n          <List>\r\n            {restaurants &&\r\n              restaurants.map((restaurant) => (\r\n                <RestItem key={restaurant.id}>\r\n                  <StyledLink to={`/${restaurant.id}`}>\r\n                    {restaurant.name}\r\n                  </StyledLink>\r\n                </RestItem>\r\n              ))}\r\n          </List>\r\n\r\n          <Outlet />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n  justify-content: center;\r\n  margin: 0;\r\n  padding: 20px;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  text-align: center;\r\n  font-size: 18px;\r\n  margin: 0 0 30px;\r\n`;\r\n\r\nexport const RestItem = styled.li`\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nexport const StyledLink = styled(NavLink)`\r\n  border: 1px solid #c3d1c0;\r\n  box-shadow: 3px 3px 8px -1px rgba(0, 0, 0, 0.5);\r\n  background-color: rgba(188, 237, 66, 0.5);\r\n  text-align: center;\r\n  font-size: 18px;\r\n  padding: 6px 20px;\r\n  &.active {\r\n    padding: 8px 16px;\r\n    color: white;\r\n    background-color: #581845;\r\n    border-radius: 4px;\r\n  }\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  border: 1px solid #c3d1c0;\r\n  box-shadow: 3px 3px 8px -1px rgba(0, 0, 0, 0.5);\r\n  background-color: rgba(188, 237, 66, 0.5);\r\n  width: 190px;\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const Cover = styled.div`\r\n  display: flex;\r\n  gap: 60px;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 200px;\r\n  padding: 2px 6px;\r\n  font-size: 18px;\r\n  &:not(:last-child) {\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\n\r\nexport const Text2 = styled.p`\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  text-align: center;\r\n`;\r\n\r\nexport const DivForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid #581845;\r\n  box-shadow: 0px 2px 11px 2px rgba(88, 24, 69, 1);\r\n  height: 60vh;\r\n  padding: 20px;\r\n  width: 240px;\r\n`;\r\n\r\nexport const DivCards = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  border: 1px solid #581845;\r\n  box-shadow: 0px 2px 11px 2px rgba(88, 24, 69, 1);\r\n  min-width: 880px;\r\n`;\r\n\r\nexport const DivTotal = styled.div`\r\n  display: flex;\r\n  gap: 30px;\r\n  justify-content: flex-end;\r\n  align-items: baseline;\r\n  box-shadow: 0px -1px 11px 0px rgba(88, 24, 69, 1);\r\n  padding: 20px;\r\n  border-top: 1px solid #581845;\r\n  background-color: #daf7a6;\r\n`;\r\n\r\nexport const Total = styled.p`\r\n  margin: 0;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  color: white;\r\n  background-color: #581845;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  padding: 4px 20px;\r\n  border-radius: 4px;\r\n  transition: transform 300ms;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n","const BASE_URL = \"https://643444ee1c5ed06c95935b39.mockapi.io\";\r\n\r\nexport const getRestaurants = () => {\r\n  const response = fetch(`${BASE_URL}/products`);\r\n  return response;\r\n};\r\n\r\nexport const getMenu = (id) => {\r\n  const response = fetch(`${BASE_URL}/products/${id}`);\r\n  return response;\r\n};\r\n\r\nexport const setData = (data) => {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(data),\r\n  };\r\n\r\n  const response = fetch(`${BASE_URL}/users`, requestOptions);\r\n  return response;\r\n};\r\n"],"names":["Shop","_ref","getList","_useState","useState","_useState2","_slicedToArray","restaurants","setRestaurants","_useState3","_useState4","status","setStatus","useEffect","getRestaurants","then","response","ok","json","Promise","reject","length","catch","error","_jsxs","children","_jsx","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","_Fragment","Text","List","map","restaurant","RestItem","StyledLink","to","concat","id","name","Outlet","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","NavLink","_templateObject4","Item","_templateObject5","Cover","_templateObject6","Form","_templateObject7","Input","_templateObject8","Text2","_templateObject9","DivForm","_templateObject10","DivCards","_templateObject11","DivTotal","_templateObject12","Total","_templateObject13","Button","_templateObject14","BASE_URL","fetch","getMenu","setData","data","requestOptions","method","headers","body","JSON","stringify"],"sourceRoot":""}